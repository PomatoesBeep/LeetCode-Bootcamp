Leetcode Bootcamp Week 1

167. Two Sum II - Input Array Is Sorted

class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        left = 0
        right = len(numbers) - 1
        while left < right:
            if numbers[left] + numbers[right] == target:
                return [left + 1, right + 1]
            elif numbers[left] + numbers[right] > target:
                right -= 1 
            else: 
                left += 1 

238. Product of Array Except Self

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        prefix = [1] * len(nums)
        suffix = [1] * len(nums)
        preproduct = 1 
        sufproduct = 1 
        for i in range(1, len(nums)):
            preproduct *= nums[i-1]
            prefix[i] = preproduct
            sufproduct *= nums[-i]
            suffix[-i-1] = sufproduct
        for i in range(len(nums)):
            prefix[i] *= suffix[i]
        return prefix

75. Sort Colors

class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        colors = [0,0,0]
        for i in range(len(nums)):
            colors[nums[i]] += 1
        for i in range(colors[0]):
            nums[i] = 0

        for i in range(colors[0], colors[0] + colors[1]):
            nums[i] = 1

        for i in range(colors[0] + colors[1], colors[0] + colors[1] + colors[2]):
            nums[i] = 2
