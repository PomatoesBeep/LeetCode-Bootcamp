8. String to Integer (atoi)

class Solution(object):
    def myAtoi(self, s):
        s = s.strip()
        if not s:
            return 0
        i = 0
        sign = 1
        result = 0
        if s[i] == '-' or s[i] == '+':
            sign = -1 if s[i] == '-' else 1
            i += 1
        while i < len(s) and s[i].isdigit():
            digit = int(s[i])
            if result > (2**31 - 1 - digit) // 10:
                return 2**31 - 1 if sign == 1 else -2**31
            result = result * 10 + digit
            i += 1
        return sign * result

438. Find All Anagrams in a String

class Solution(object):
    def findAnagrams(self, s, p):
        if len(s) < len(p):
            return []
        anagram = Counter(p)
        key = Counter(s[:len(p)])
        result = []
        if key == anagram:
            result.append(0)
        l = 0
        r = len(p) - 1
        while r < len(s) - 1:
            r += 1
            key[s[r]] += 1
            key[s[l]] -= 1
            if key[s[l]] == 0:
                del key[s[l]]
            l += 1
            if key == anagram:
                result.append(l)
        return result

151. Reverse Words in a String

class Solution(object):
    def reverseWords(self, s):
        """
        :type s: str
        :rtype: str
        """
        words = s.split()
        l = 0
        r = len(words) - 1
        while l < r:
            words[l], words[r] = words[r], words[l]
            l += 1
            r -= 1
        return " ".join(words)
