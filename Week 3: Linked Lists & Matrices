234. Palindrome Linked List

class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        nums = []
        while head:
            nums.append(head.val)
            head = head.next
        l, r = 0, len(nums) - 1
        while l <= r:
            if nums[l] != nums[r]:
                return False
            l += 1
            r -= 1
        return True

143. Reorder List

class Solution:
    def reorderList(self, head):
        fast = head
        slow = head

        # find the midpoint of the linked list
        while fast and fast.next:
            fast = fast.next.next
            slow = slow.next

        # splitting them into two lists
        second = slow.next
        slow.next = None
        node = None

        # reversing the second linked list
        while second:
            temp = second.next
            second.next = node
            node = second
            second = temp

        first = head
        second = node

        # adding the lists together
        while second:
            temp1, temp2 = first.next, second.next
            first.next, second.next = second, temp1
            first, second = temp1, temp2

73. Set Matrix Zeroes

class Solution(object):
    def setZeroes(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: None Do not return anything, modify matrix in-place instead.
        """
        if not matrix:
            return
        
        rows = len(matrix)
        cols = len(matrix[0])

        first_row_has_zero = False
        first_col_has_zero = False
        
        # Step 1: Check if first row has zero
        for j in range(cols):
            if matrix[0][j] == 0:
                first_row_has_zero = True
                break
        
        # Step 2: Check if first column has zero
        for i in range(rows):
            if matrix[i][0] == 0:
                first_col_has_zero = True
                break
        
        # Step 3: Use first row and column to mark zeros
        for i in range(1, rows):
            for j in range(1, cols):
                if matrix[i][j] == 0:
                    matrix[i][0] = 0
                    matrix[0][j] = 0
        
        # Step 4: Zero out cells based on markers in first row and column
        for i in range(1, rows):
            if matrix[i][0] == 0:
                for j in range(1, cols):
                    matrix[i][j] = 0
        
        for j in range(1, cols):
            if matrix[0][j] == 0:
                for i in range(1, rows):
                    matrix[i][j] = 0
        
        # Step 5: Zero out first row/column if needed
        if first_row_has_zero:
            for j in range(cols):
                matrix[0][j] = 0
        
        if first_col_has_zero:
            for i in range(rows):
                matrix[i][0] = 0
